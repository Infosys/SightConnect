# name: "Build iOS app"


# on:
#     push:
#       branches:
#         - main

# jobs:
#   build_with_signing:
#     runs-on: macos-latest
#     steps:

#       - name: checkout repository
#         uses: actions/checkout@master
#         with:
#             repository: monirul-islam_infosys/EYE_CARE_FOR_ALL_INFOSYS
#             token: ${{ secrets.MYPAT }}

#       - name: Decode android/key.properties
#         run: echo "${{ secrets.EXPORT_OPTIONS_PLIST }}" | base64 --decode > ios/Runner/ExportOptions.plist
    
#       - name: Install the Apple certificate and provisioning profile
#         env:
#           BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
#           P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
#           BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
#           KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
#         run: |
#           # create variables
#           CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
#           PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
#           KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

#           # import certificate and provisioning profile from secrets
#           echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
#           echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

#           # create temporary keychain
#           security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
#           security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
#           security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

#           # import certificate to keychain
#           security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
#           security list-keychain -d user -s $KEYCHAIN_PATH

#           # apply provisioning profile
#           mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
#           cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles          

#       - name: Set up Flutter
#         uses: subosito/flutter-action@v2
#         with:
#          flutter-version: '3.16.5'

#       - name: Flutter clean
#         run: flutter clean
        
#       - name: Flutter Doctor
#         run: flutter doctor -v
      
#       - name: Install Dependencies
#         run: flutter pub get

#       - name: Build Android IPA
#         run: flutter build ipa --release  --export-options-plist=ios/Runner/ExportOptions.plist --build-number ${{ github.run_number }}

#       - name: Upload IPA
#         uses: actions/upload-artifact@v2
#         with:
#           name: apk-output
#           path: ./build/ios/ipa/eye_care_for_all.ipa
#           retention-days: 10

#       - name: upload artifact to App Center
#         uses: wzieba/AppCenter-Github-Action@v1
#         with:
#           appName: stg-radar-mobility/SightConnect
#           token: ${{secrets.APP_CENTER_TOKEN}}
#           group: Collaborators
#           file: ./build/ios/ipa/eye_care_for_all.ipa
#           notifyTesters: true
#           debug: false
#       - name: Clean up keychain and provisioning profile
#         if: ${{ always() }}
#         run: |
#             security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
#             rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision