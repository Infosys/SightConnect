pipeline {
  agent any

  environment {
    REPO_OWNER = "Infosys-EyeCare4All"
    REPO_NAME = "FlutterApp"
    WORKFLOW_NAME = "eyebank.yml"
    ARTIFACT_NAME = "BuildArtifactZIP"
    ACCESS_TOKEN = credentials('github-access-token')
    DOWNLOAD_PATH = "artifact.zip"  // Specify the desired file location

    VM_IPS = "infyeyecareadm@10.205.248.93" 
  }

  stages {
    stage('Download Artifact') {
      steps {
        script {
          // Get the latest workflow run ID
          def runId = sh(
            script: "curl -s -X GET -H 'Accept: application/vnd.github.v3+json' -H 'Authorization: Bearer ${env.ACCESS_TOKEN}' 'https://api.github.com/repos/${env.REPO_OWNER}/${env.REPO_NAME}/actions/workflows/${env.WORKFLOW_NAME}/runs' | jq -r '.workflow_runs[0].id'",
            returnStdout: true
          ).trim()

          // Get the artifact ID
          def artifactId = sh(
            script: "curl -s -X GET -H 'Accept: application/vnd.github.v3+json' -H 'Authorization: Bearer ${env.ACCESS_TOKEN}' 'https://api.github.com/repos/${env.REPO_OWNER}/${env.REPO_NAME}/actions/runs/${runId}/artifacts' | jq -r \".artifacts[] | select(.name == \\\"${env.ARTIFACT_NAME}\\\") | .id\"",
            returnStdout: true
          ).trim()
          sh "rm -rf ${env.DOWNLOAD_PATH}"
          // Download the artifact
          sh "curl -o ${env.DOWNLOAD_PATH} -J -L -H 'Accept: application/vnd.github.v3+json' -H 'Authorization: Bearer ${env.ACCESS_TOKEN}' 'https://api.github.com/repos/${env.REPO_OWNER}/${env.REPO_NAME}/actions/artifacts/${artifactId}/zip'"
        }
      }
    }
    stage('Transfer to VM') {
            steps {
                script {
                    def vmIps = VM_IPS.split(',')
                    sh "unzip -o ${env.DOWNLOAD_PATH}"
                    for (def ip : vmIps) {
                        sh """
                            
                            sftp -i ~/pem/care-dev.pem  $ip 'bash -s' <<EOF
                            put build.zip
                        
                            """
                    }
                }
            }
        }
        
        stage('Deploy to VMs') {
            steps {
                script {
                    def vmIps = VM_IPS.split(',')
                    for (def ip : vmIps) {
                        
                                sh """
                                ssh -i ~/pem/care-dev.pem  $ip 'bash -s' <<EOF
                                ls
                                rm -rf /var/www/Eyebank
                                unzip build.zip -d /var/www/Eyebank/
                                chmod -R 777 /var/www/Eyebank/
                                """
                            
                    }
                }
            }
        }
  }
}
